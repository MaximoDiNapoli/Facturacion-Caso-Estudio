
# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.datasource.url=jdbc:postgresql://192.168.1.142:5432/invoice-system?currentSchema=purchase_schema
spring.datasource.username=demo
spring.datasource.password=${{ secrets.DATASOURCE_PASSWORD }}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.main.allow-bean-definition-overriding=true

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database=POSTGRESQL

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

api.items-microservice=http://items-microservice/
api.product-microservice=http://products-microservice/

api.gateway=localhost:9000

server.port=8087
spring.application.name=purchase-microservice
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

# Show or not log for each sql query
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=create-drop
# Allows Hibernate to generate SQL optimized for a particular DBMS

# Swagger
springdoc.swagger-ui.path=/api/docs/

#ACTUATOR
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#ADMIN SERVER
spring.boot.admin.client.url=http://localhost:8080